name: Trabalho de Engenharia de Software 2

on:
  push:
    branches:
      - master  # Branch para monitorar no deploy

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

     #Instalação de dependências
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage
      
      

      #Teste e Cobertura

      - name: Run migrations
        run: |
          python manage.py migrate

      - name: Run tests with coverage
        run: |
          export PYTHONPATH=$(pwd)
          coverage run --source='.' manage.py test
          coverage report
          coverage html
        env:
          DJANGO_SETTINGS_MODULE: your_project_name.settings

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: coverage.xml

     #Deploy heroku

      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh

      - name: Authenticate with Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          echo "$HEROKU_API_KEY" | heroku auth:token

      - name: Add Heroku git remote
        run: |
          git remote add heroku https://heroku:${{ secrets.HEROKU_API_KEY }}@git.heroku.com/${{ secrets.HEROKU_APP_NAME }}.git || echo "Remote already exists"

      - name: Fetch and unshallow
        run: |
          git fetch --unshallow || echo "Already fully fetched"

      - name: Fetch all branches
        run: |
          git fetch --all 

      - name: Fetch and merge changes from Heroku
        run: |
          git fetch heroku
          git checkout master
          git merge heroku/master --strategy-option=theirs || true  

      - name: Deploy to Heroku
        run: |
          git push heroku master --force || echo "Push failed"

